#!/bin/bash

source resources/setup.sh "$@"
set -- $concatenated

exec &> >(tee ${section_01d_logfile})
print_version

# Step 1: generate a sparse genetic relationship matrix (GRM); PCs has been generated by 01b.
# For family data, use all samples, correcting for the full (sparse) GRM.

if [ "${related}" = "yes" ]; then
    echo "Related is set to yes, making bK sparse"
    # grmfile_relateds generated in 01b

    ${gcta} \
	    --grm ${grmfile_relateds} \
	    --make-bK-sparse 0.05 \
	    --autosome \
	    --make-grm \
	    --out ${grmfile_fast}_rel \
	    --thread-num ${nthreads}

elif [ "${related}" = "no" ]; then
    echo "Related is set to no, making bK sparse"
    
    ${gcta} \
	    --grm ${grmfile_all} \
	    --make-bK-sparse 0.05 \
	    --autosome \
	    --make-grm \
	    --out ${grmfile_fast}_unrel \
	    --thread-num ${nthreads}
fi

# Step2: make covar files for gcta input
echo "Making covariate files for GCTA"
${R_directory}Rscript resources/genetics/split_covar.R \
    ${covariates_combined} \
    ${bfile}.fam \
    ${ccovar_file} \
    ${qcovar_file}

# Step3: Loop through each positive control locus
echo "Running positive controls"

############################################################################################################
# positive control
############################################################################################################

tail -n +2 ./resource/genetics/mqtl_pos_ctr.tsv | while IFS=$'\t' read -r positive_control_cpg positive_control_snp_chr positive_control_snp_pos positive_control_snp_window positive_control_threshold
do
    echo "Processing positive control: $positive_control_cpg"

    # # test
    # positive_control_cpg="cg07959070"
    # positive_control_snp_chr="22"
    # positive_control_snp_pos="49660223"
    # positive_control_snp_window="100000"
    # positive_control_threshold="0.001"

    # Get the control CPG
    awk -F',' -v cpg=${positive_control_cpg} '{ if(NR == 1 || $1 == cpg) { print $0 }}' ${untransformed_methylation_adjusted_pcs}.csv > ${untransformed_methylation_adjusted}.${positive_control_cpg}.positive_control
    awk -F',' -v cpg=${positive_control_cpg} '{ if(NR == 1 || $1 == cpg) { print $0 }}' ${transformed_methylation_adjusted_pcs}.csv > ${transformed_methylation_adjusted}.${positive_control_cpg}.positive_control

    echo "making gcta input for positive control CPG ${positive_control_cpg} (untransformed)"
    nrow=`cat ${untransformed_methylation_adjusted}.${positive_control_cpg}.positive_control | wc -l`
    if [ "$nrow" -lt "2" ]; then
        echo "The positive control CPG ${positive_control_cpg} appears to be missing for mQTL analysis on untransformed methylation data. Please check."
    else 
        ${R_directory}Rscript resources/genetics/make_control.R \
            ${untransformed_methylation_adjusted}.${positive_control_cpg}.positive_control \
            ${intersect_ids_plink} \
            ${untransformed_methylation_adjusted}.${positive_control_cpg}.positive_control.gcta

        echo "Perform fastGWA (untransformed) in positive control"
        if [ "${related}" = "yes" ]; then
            echo "grm from related individuals"
            ${gcta} \
                --bfile ${bfile} \
                --grm-sparse ${grmfile_fast}_rel \
                --fastGWA-mlm \
                --pheno ${untransformed_methylation_adjusted}.${positive_control_cpg}.positive_control.gcta \
                --qcovar ${qcovar_file} \
                --covar ${ccovar_file} \
                --out ${section_01_dir}/positive_control_untransformed_${positive_control_cpg} \
                --thread-num ${nthreads}
        elif [ "${related}" = "no" ]; then
            echo "grm from unrelated individuals"
            ${gcta} \
                --bfile ${bfile} \
                --grm-sparse ${grmfile_fast}_unrel \
                --fastGWA-mlm \
                --pheno ${untransformed_methylation_adjusted}.${positive_control_cpg}.positive_control.gcta \
                --qcovar ${qcovar_file} \
                --covar ${ccovar_file} \ 
                --out ${section_01_dir}/positive_control_untransformed_${positive_control_cpg} \
                --thread-num ${nthreads}
        fi
        
        tr -s " " < ${section_01_dir}/positive_control_untransformed_${positive_control_cpg}.fastGWA | gzip -c > ${section_01_dir}/positive_control_untransformed_${positive_control_cpg}.fastGWAmlm.gz
        rm ${section_01_dir}/positive_control_untransformed_${positive_control_cpg}.fastGWA

        echo "make manhattan and qq plots (untransformed)"
        echo ${section_01_dir}/positive_control_untransformed_${positive_control_cpg}.fastGWAmlm.gz > ${section_01_dir}/positive.control.untransformed.file.txt
        ${R_directory}Rscript resources/genetics/gcta_plot_gwas.R \
            ${section_01_dir}/positive.control.untransformed.file.txt \
            10 \
            1 \
            3 \
            2 \
            TRUE \
            ${positive_control_snp_chr} \
            ${positive_control_snp_pos} \
            ${positive_control_snp_window} \
            ${positive_control_threshold}
    fi

    # echo "making gcta input for positive control CPG ${positive_control_cpg} (transformed)"
    # nrow=`cat ${transformed_methylation_adjusted}.${positive_control_cpg}.positive_control | wc -l`
    # if [ "$nrow" -lt "2" ]; then
    #     echo "The positive control CPG ${positive_control_cpg} appears to be missing for mQTL analysis on transformed methylation data. Please check."
    # else 
    #     ${R_directory}Rscript resources/genetics/make_control.R \
    #         ${transformed_methylation_adjusted}.${positive_control_cpg}.positive_control \
    #         ${intersect_ids_plink} \
    #         ${transformed_methylation_adjusted}.${positive_control_cpg}.positive_control.gcta

    #     echo "Perform fastGWA (transformed) in positive control"
    #     if [ "${related}" = "yes" ]; then
    #         echo "grm from related individuals"
    #         ${gcta} \
    #             --bfile ${bfile} \
    #             --grm-sparse ${grmfile_fast}_rel \
    #             --fastGWA-mlm \
    #             --pheno ${transformed_methylation_adjusted}.${positive_control_cpg}.positive_control.gcta \
    #             --qcovar ${qcovar_file} \
    #             --covar ${ccovar_file} \
    #             --out ${section_01_dir}/positive_control_untransformed_${positive_control_cpg} \
    #             --thread-num ${nthreads}
    #     elif [ "${related}" = "no" ]; then
    #         echo "grm from unrelated individuals"
    #         ${gcta} \
    #             --bfile ${bfile} \
    #             --grm-sparse ${grmfile_fast}_unrel \
    #             --fastGWA-mlm \
    #             --pheno ${transformed_methylation_adjusted}.${positive_control_cpg}.positive_control.gcta \
    #             --qcovar ${qcovar_file} \
    #             --covar ${ccovar_file} \
    #             --out ${section_01_dir}/positive_control_untransformed_${positive_control_cpg} \
    #             --thread-num ${nthreads}
    #     fi
    #     tr -s " " < ${section_01_dir}/positive_control_transformed_${positive_control_cpg}.fastGWA | gzip -c > ${section_01_dir}/positive_control_transformed_${positive_control_cpg}.fastGWAmlm.gz
    #     rm ${section_01_dir}/positive_control_transformed_${positive_control_cpg}.fastGWA

    #     echo "make manhattan and qq plots (transformed)"
    #     echo ${section_01_dir}/positive_control_transformed_${positive_control_cpg}.fastGWAmlm.gz > ${section_01_dir}/positive.control.transformed.file.txt
    #     ${R_directory}Rscript resources/genetics/gcta_plot_gwas.R \
    #         ${section_01_dir}/positive.control.transformed.file.txt \
    #         10 \
    #         1 \
    #         3 \
    #         2 \
    #         TRUE \
    #         ${positive_control_snp_chr} \
    #         ${positive_control_snp_pos} \
    #         ${positive_control_snp_window} \
    #         ${positive_control_threshold}
    # fi

done

# Step3: Shuffle negative control loci and run the loop again
############################################################################################################
# negative control
############################################################################################################

echo "Running negative control"
# 4 for D, 5 for E, 16 for P
seed=45516

tail -n +2 ./resource/genetics/mqtl_pos_ctr.tsv | while IFS=$'\t' read -r positive_control_cpg positive_control_snp_chr positive_control_snp_pos positive_control_snp_window positive_control_threshold
do
    negative_control_cpg="NEG_${positive_control_cpg}"

    echo "Processing negative control: $negative_control_cpg"

    echo "Confirming the corresponding positive control exists"
    nrow=`cat ${untransformed_methylation_adjusted}.${positive_control_cpg}.positive_control | wc -l`
    if [ "$nrow" -lt "2" ]; then
        echo "The positive control CPG ${positive_control_cpg} appears to be missing for mQTL analysis on untransformed methylation data. Please check."
    else
        echo "Shuffle untransformed"
        ${R_directory}Rscript resources/genetics/shuffle_control.R \
            ${untransformed_methylation_adjusted}.${positive_control_cpg}.positive_control \
            ${untransformed_methylation_adjusted}.${negative_control_cpg}.negative_control \
            $seed

        echo "Making gcta input for negative control CPG ${negative_control_cpg} (untransformed)"
        ${R_directory}Rscript resources/genetics/make_control.R \
            ${untransformed_methylation_adjusted}.${negative_control_cpg}.negative_control \
            ${intersect_ids_plink} \
            ${untransformed_methylation_adjusted}.${negative_control_cpg}.negative_control.gcta

            echo "Perform GCTA (untransformed) in negative control"
        if [ "${related}" = "yes" ]; then
            ${gcta} \
                --bfile ${bfile} \
                --grm-sparse ${grmfile_fast}_rel \
                --fastGWA-mlm \
                --pheno ${untransformed_methylation_adjusted}.${negative_control_cpg}.negative_control.gcta \
                --qcovar ${qcovar_file} \
                --covar ${ccovar_file} \ 
                --out ${section_01_dir}/negative_control_untransformed_${negative_control_cpg} \
                --thread-num ${nthreads}

        elif [ "${related}" = "no" ]; then
            ${gcta} \
                --bfile ${bfile} \
                --grm-sparse ${grmfile_fast}_unrel \
                --fastGWA-mlm \
                --pheno ${untransformed_methylation_adjusted}.${negative_control_cpg}.negative_control.gcta \
                --qcovar ${qcovar_file} \
                --covar ${ccovar_file} \
                --out ${section_01_dir}/negative_control_untransformed_${negative_control_cpg} \
                --thread-num ${nthreads}
        fi

        tr -s " " < ${section_01_dir}/negative_control_untransformed_${negative_control_cpg}.fastGWA | gzip -c > ${section_01_dir}/negative_control_untransformed_${negative_control_cpg}.fastGWAmlm.gz
        rm ${section_01_dir}/negative_control_untransformed_${negative_control_cpg}.fastGWA

        echo "make manhattan and qq plots (untransformed)"
        echo ${section_01_dir}/negative_control_untransformed_${negative_control_cpg}.fastGWAmlm.gz > ${section_01_dir}/negative.control.untransformed.file.txt
        ${R_directory}Rscript resources/genetics/gcta_plot_gwas.R \
        ${section_01_dir}/negative.control.untransformed.file.txt \
            10 \
            1 \
            3 \
            2 \
            TRUE \
            ${positive_control_snp_chr} \
            ${positive_control_snp_pos} \
            ${positive_control_snp_window} \
            ${positive_control_threshold}
    fi

    # nrow=`cat ${transformed_methylation_adjusted}.${positive_control_cpg}.positive_control | wc -l`
    # if [ "$nrow" -lt "2" ]; then
    #     echo "The positive control CPG ${positive_control_cpg} appears to be missing for mQTL analysis on transformed methylation data. Please check."
    # else
    #     echo "Shuffle transformed"
    #     ${R_directory}Rscript resources/genetics/shuffle_control.R \
    #         ${transformed_methylation_adjusted}.${positive_control_cpg}.positive_control \
    #         ${transformed_methylation_adjusted}.${negative_control_cpg}.negative_control \
    #         $seed

    #     echo "Making gcta input for negative control CPG ${negative_control_cpg} (transformed)"
    #     ${R_directory}Rscript resources/genetics/make_control.R \
    #         ${transformed_methylation_adjusted}.${negative_control_cpg}.negative_control \
    #         ${intersect_ids_plink} \
    #         ${transformed_methylation_adjusted}.${negative_control_cpg}.negative_control.gcta

    #     echo "Perform GCTA (transformed) in negative control"
    #     if [ "${related}" = "yes" ]; then
    #         ${gcta} \
    #             --bfile ${bfile} \
    #             --grm-sparse ${grmfile_fast}_rel \
    #             --fastGWA-mlm \
    #             --pheno ${transformed_methylation_adjusted}.${positive_control_cpg}.positive_control.gcta \
    #             --qcovar ${qcovar_file} \ 
    #             --covar ${ccovar_file} \
    #             --out ${section_01_dir}/positive_control_untransformed_${positive_control_cpg} \
    #             --thread-num ${nthreads}

    #     elif [ "${related}" = "no" ]; then
    #         ${gcta} \
    #             --bfile ${bfile} \
    #             --grm-sparse ${grmfile_fast}_unrel \
    #             --fastGWA-mlm \
    #             --pheno ${transformed_methylation_adjusted}.${positive_control_cpg}.positive_control.gcta \
    #             --qcovar ${qcovar_file} \
    #             --covar ${ccovar_file} \
    #             --out ${section_01_dir}/positive_control_untransformed_${positive_control_cpg} \
    #             --thread-num ${nthreads}
    #     fi

    #     tr -s " " < ${section_01_dir}/negative_control_transformed_${negative_control_cpg}.fastGWA | gzip -c > ${section_01_dir}/negative_control_transformed_${negative_control_cpg}.fastGWAmlm.gz
    #     rm ${section_01_dir}/negative_control_transformed_${negative_control_cpg}.fastGWA

    #     echo "make manhattan and qq plots (transformed)"
    #     echo ${section_01_dir}/negative_control_transformed_${negative_control_cpg}.fastGWAmlm.gz > ${section_01_dir}/negative.control.transformed.file.txt
    #     ${R_directory}Rscript resources/genetics/gcta_plot_gwas.R \
    #         ${section_01_dir}/negative.control.transformed.file.txt \
    #         10 \
    #         1 \
    #         3 \
    #         2 \
    #         TRUE \
    #         ${positive_control_snp_chr} \
    #         ${positive_control_snp_pos} \
    #         ${positive_control_snp_window} \
    #         ${positive_control_threshold}
    # fi
done

echo "Successfully completed script 1d"